<!-- Muestra los campos donde se inserta la cantidad con la que pago el cliente en el pago de servicios -->
<table class="table">
  <tbody>
    <tr>
      <th style="width:50%">Total productos:</th>
      <td><%= number_to_currency totals[:total_products] %></td>
    </tr>
    <tr>
      <th>Total mano de obra:</th>
      <td><%= number_to_currency totals[:total_worforce] %></td>
    </tr>
    <tr>
      <th>Descuento:</th>
      <td><%= number_to_currency totals[:total_discount] %></td>
    </tr>
    <tr>
      <th>Total Final:</th>
      <td>
        <span id="total_to_paid" class="label label-info" style="font-size: 15px;"><%= number_to_currency totals[:total_final] %></span>
      </td>
    </tr>
    <tr>
      <th>Pago con:</th>
      <% if @service.is_in_process? %>
        <td>
          <div class="input-group">
            <span class="input-group-addon">$</span>
            <%= text_field_tag "service[paid_with]", '', class: "form-control form-control-sm", id: 'paid_with_service', required: true %>
          </div>
        </td>
      <% else %>
        <td><%= number_to_currency totals[:paid_with] %></td>
      <% end %>
    </tr>
    <tr>
      <th>Cambio:</th>
      <% if @service.is_in_process? %>
        <td>
          <div class="input-group">
            <span class="input-group-addon">$</span>
            <%= text_field_tag "service[change]", '', class: 'form-control form-control-sm', id: 'change-service', required: true, readonly: true %>
          </div>
        </td>
      <% else %>
        <td><%= number_to_currency totals[:change] %></td>
      <% end %>
    </tr>
  </tbody>
</table>

<%= hidden_field_tag 'cash_service_open', cash_service_open? %>

<script>
  $(document).ready(function() {
    var $paidWithService = $('#paid_with_service');
    var $change = $("#change-service");
    var $paymentType = $("#payment_payment_type_id");

    setCurrency($paidWithService);
    setCurrency($change)
    obtainChange();

    $paidWithService.keyup(function() {
      obtainChange();
    });

    updatePayment($paymentType.find("option:selected").attr('value'));

    $paymentType.change(function() {
      updatePayment($(this).find("option:selected").attr('value'));
    });
  });

  function obtainChange() {
    var $paidWithService = $('#paid_with_service');
    var $totalPaid = $('#total_to_paid');
    var $change = $("#change-service");
    var $btnPaid = $("#btn_paid");
    var cashServiceOpen = $("#cash_service_open").val();

    var paidWith = Number($paidWithService.val().replace(/,/g, ""));
    var totalPaid = Number($totalPaid.html().split("$")[1].replace(/,/g, ""))
    var change = (paidWith - totalPaid).toFixed(2);
    $change.val(change);
    console.log(paidWith);
    console.log(totalPaid);
    console.log(change.replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));

    if(change < 0 || totalPaid <= 0) {
      $btnPaid.attr("disabled", true);
    } else {
      if(cashServiceOpen == "true") {
        $btnPaid.removeAttr("disabled");
      }
    }
  }

  function updatePayment(paymentMethod) {
    var $totalPaid = $('#total_to_paid');
    var $paidWithService = $('#paid_with_service');
    // Check payment method
    if(paymentMethod != "" && paymentMethod != "1") {
      var totalToPaid = Number($totalPaid.html().split("$")[1].replace(/,/g, ""));
      $paidWithService.val(totalToPaid);
      $paidWithService.prop("readonly",true);
      obtainChange();
    } else {
      $paidWithService.val(0);
      $paidWithService.prop("readonly",false);
      obtainChange();
    }
  }

</script>
