$("#accordion").prepend('<%= j render("new") %>'); // Response when add support link is clicked

$('.textarea').wysihtml5();

$('.autocomplete_spare_parts').select2({
  minimumInputLength: 3,
  ajax: {
    delay: 250,
    url: "/spare_parts/autocomplete",
    dataType: 'json',
    cache: true
  },
  escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
  templateResult: formatRepo,
  templateSelection: formatRepoSelection
});

function formatRepo (spare_part) {
  if (spare_part.loading) {
    return spare_part.text;
  }

  var markup = "<div class='select2-result-repository__meta'>" +
      "<div class='select2-result-repository__title'>" + spare_part.text + "</div>";

  if (spare_part.description) {
    markup += "<div class='select2-result-repository__description'>" + spare_part.description + "</div>";
  }

  markup += "</div>";

  return markup;
}

function formatRepoSelection (spare_part) {
  return spare_part.description || spare_part.text;
}

$('.autocomplete_spare_parts').on('select2:select', function (e) {
    var data = e.params.data;  
    $.ajax({
      url: "/supports/add_spare_part",
      method: "get",
      dataType: "script",
      data: {
        spare_part: data
      }
    })
});

(function() {

  var streaming = false,
      video        = document.querySelector('#video'),
      canvas       = document.querySelector('#canvas'),
      $takepicturebutton  = $("#takepicture"),
      width = 320,
      height = 0;

  navigator.getMedia = ( navigator.getUserMedia ||
                         navigator.webkitGetUserMedia ||
                         navigator.mozGetUserMedia ||
                         navigator.msGetUserMedia);

  navigator.getMedia(
    {
      video: true,
      audio: false
    },
    function(stream) {
      if (navigator.mozGetUserMedia) {
        video.mozSrcObject = stream;
      } else {
        var vendorURL = window.URL || window.webkitURL;
        video.srcObject = stream;
        //video.play();
        //video.src = vendorURL.createObjectURL(stream);
      }
      video.play();
    },
    function(err) {
      console.log("An error occured! " + err);
    }
  );

  video.addEventListener('canplay', function(ev){
    if (!streaming) {
      height = video.videoHeight / (video.videoWidth/width);
      video.setAttribute('width', width);
      video.setAttribute('height', height);
      canvas.setAttribute('width', width);
      canvas.setAttribute('height', height);
      streaming = true;
    }
  }, false);

  function takepicture() {
    var canvas = document.querySelector('#canvas');
    var $canvas = $("#canvas");
    canvas.width = width;
    canvas.height = height;
    canvas.style.display = "block";
    canvas.getContext('2d').drawImage(video, 0, 0, width, height);

    $takepicturebutton
      .removeClass("btn-primary")
      .addClass("btn-danger")
      .attr("data-takepicture", false)
      .html('<b><i class="fa fa-fw fa-remove"></i></b>');

    video.style.display = "none";

    var data = canvas.toDataURL('image/png');
    document.getElementById('image_web_cam').value = data;
  }

  function deletepicture() {  
    var $canvas = $("#canvas");
    $canvas.css("display", "none");
    video.style.display = "block";

    $takepicturebutton
      .removeClass("btn-danger")
      .addClass("btn-primary")
      .attr("data-takepicture", true)
      .html('<b><i class="fa fa-fw fa-camera"></i></b>');

    document.getElementById('image_web_cam').value = "";
  }

  $takepicturebutton.click(function(ev){
    console.log("Take picture");
    if($(this).attr('data-takepicture') == "true" ) {
      takepicture();
    } else {
      deletepicture();
    }

    ev.preventDefault();
  });

})();
