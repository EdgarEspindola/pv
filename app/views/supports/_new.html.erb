<div class="panel box box-primary">
  <div class="box-header with-border">
    <h4 class="box-title">
      <a data-toggle="collapse" data-parent="#accordion" href="#collapse<%= Time.now.to_i %>" aria-expanded="true" class="" id="link_collapse">
        <%= "[Nuevo Registro]" %>
      </a>
    </h4>
  </div>
  <div id="collapse<%= Time.now.to_i %>" class="panel-collapse collapse in" aria-expanded="true" style="">
    <div class="box-body">
      <%= render 'supports/form', support: @new_support %>
    </div>
  </div>
</div>

<script>
  $('.textarea').wysihtml5();

  <% if @new_support.errors.present? %>
    $("#btn_paid").removeAttr("disabled");
  <% end %>

  $(".datepicker").datepicker({
    format: "dd/mm/yyyy",
    language: "es"
  });

  $("#support_worforce").inputmask("currency", {
    "prefix": ""
  });

  $("#support_discount").inputmask("percentage", {
    "suffix": ""
  });

  $('.autocomplete_spare_parts').select2({
    minimumInputLength: 3,
    ajax: {
      delay: 250,
      url: "/spare_parts/autocomplete",
      dataType: 'json',
      cache: true
    },
    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
    templateResult: formatRepo,
    templateSelection: formatRepoSelection
  });

  function formatRepo (spare_part) {
    if (spare_part.loading) {
      return spare_part.text;
    }

    var markup = "<div class='select2-result-repository__meta'>" +
        "<div class='select2-result-repository__title'>" + spare_part.text + "</div>";

    if (spare_part.description) {
      markup += "<div class='select2-result-repository__description'>" + spare_part.description + "</div>";
    }

    markup += "</div>";

    return markup;
  }

  function formatRepoSelection (spare_part) {
    return spare_part.description || spare_part.text;
  }

  $('.autocomplete_spare_parts').on('select2:select', function (e) {
      var data = e.params.data;
      $.ajax({
        url: "/supports/add_spare_part",
        method: "get",
        dataType: "script",
        data: {
          spare_part: data
        },
        beforeSend: function(xhr) {
          $("#spare_parts_used_by_support").LoadingOverlay("show");
        },
        complete: function(xhr) {
          $("#spare_parts_used_by_support").LoadingOverlay("hide", true);
        }
      })
  });

  (function() {

    var streaming = false,
        video        = document.querySelector('#video'),
        canvas       = document.querySelector('#canvas'),
        $takepicturebutton  = $("#takepicture"),
        width = 320,
        height = 0;

    navigator.getMedia = ( navigator.getUserMedia ||
                           navigator.webkitGetUserMedia ||
                           navigator.mozGetUserMedia ||
                           navigator.msGetUserMedia);

    navigator.getMedia(
      {
        video: true,
        audio: false
      },
      function(stream) {
        if (navigator.mozGetUserMedia) {
          video.mozSrcObject = stream;
        } else {
          var vendorURL = window.URL || window.webkitURL;
          video.srcObject = stream;
          //video.play();
          //video.src = vendorURL.createObjectURL(stream);
        }
        video.play();
      },
      function(err) {
        console.log("An error occured! " + err);
        $takepicturebutton.addClass("disabled");
      }
    );

    video.addEventListener('canplay', function(ev){
      if (!streaming) {
        height = video.videoHeight / (video.videoWidth/width);
        video.setAttribute('width', width);
        video.setAttribute('height', height);
        canvas.setAttribute('width', width);
        canvas.setAttribute('height', height);
        streaming = true;
      }
    }, false);

    function takepicture() {
      var canvas = document.querySelector('#canvas');
      var $canvas = $("#canvas");
      canvas.width = width;
      canvas.height = height;
      canvas.style.display = "block";
      canvas.getContext('2d').drawImage(video, 0, 0, width, height);

      $takepicturebutton
        .removeClass("btn-primary")
        .addClass("btn-danger")
        .attr("data-takepicture", false)
        .html('<b><i class="fa fa-fw fa-remove"></i></b>');

      video.style.display = "none";

      var data = canvas.toDataURL('image/png');
      document.getElementById('image_web_cam').value = data;
    }

    function deletepicture() {
      var $canvas = $("#canvas");
      $canvas.css("display", "none");
      video.style.display = "block";

      $takepicturebutton
        .removeClass("btn-danger")
        .addClass("btn-primary")
        .attr("data-takepicture", true)
        .html('<b><i class="fa fa-fw fa-camera"></i></b>');

      document.getElementById('image_web_cam').value = "";
    }

    $takepicturebutton.click(function(ev){
      console.log("Take picture");
      if($(this).attr('data-takepicture') == "true" ) {
        takepicture();
      } else {
        deletepicture();
      }

      ev.preventDefault();
    });

  })();

  $("#support_worforce").on("keydown", _.debounce(update_worforce, 1000));

  function update_worforce() {
    $.ajax({
      url: "/supports/update_worforce",
      method: "put",
      dataType: "script",
      data: {
        worforce: $(this).val()
      },
      beforeSend: function(xhr) {
        $("#total_to_paid_by_spare_parts_used_by_support").LoadingOverlay("show");
      },
      complete: function(xhr, status) {
        $("#total_to_paid_by_spare_parts_used_by_support").LoadingOverlay("hide", true);
      }

    });
  }  

  $("#support_discount").on("keydown", _.debounce(update_discount, 1000));

  function update_discount() {
    $.ajax({
        url: "/supports/update_discount",
        method: "put",
        dataType: "script",
        data: {
          discount: $(this).val()
        },
        beforeSend: function(xhr) {
        $("#total_to_paid_by_spare_parts_used_by_support").LoadingOverlay("show");
      },
      complete: function(xhr, status) {
        $("#total_to_paid_by_spare_parts_used_by_support").LoadingOverlay("hide", true);
      }
    });
  }

</script>
